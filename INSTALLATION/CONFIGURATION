SONARQUBE

SonarQube Installation
SonarQube provides the capability to not only show health of an application but also to highlight issues newly introduced. With a Quality Gate in place, you can fix the leak and therefore improve code quality systematically.

Prerequisites
1. Java
2. Database ( MySQL is Deprecated so we are going to focus on PostgresSQL)
Increase the vm.max_map_count kernal ,file discriptor and ulimit for current session at runtime.
sudo sysctl -w vm.max_map_count=542288
sudo sysctl -w fs.file-max=131072
ulimit -n 131072
ulimit -u 8192
vim /etc/security/limits.conf  
# Add Below To The File
elasticsearch - nofile 131072
elasticsearch - nproc 65535
elasticsearch   soft    nofile          65536
elasticsearch   hard    nofile          65536
elasticsearch   memlock unlimited
root soft memlock unlimited
root hard memlock unlimited
root - nofile 131072
root - nproc 8192
sonarqube - nofile 131072
sonarqube - nproc 65535

vim /etc/sysctl.conf
fs.file-max = 2097152
vm.max_map_count = 524288
vm.swappiness = 1

Installation
Step 1: Install OpenJDK
sudo yum install java-11-openjdk-devel
sudo java -version

Step 2: Install PostgreSQL (https://www.postgresql.org/download/linux/redhat/)
# Install the repository RPM:
sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm

# Install PostgreSQL:
sudo yum install -y postgresql10-server

# Optionally initialize the database and enable automatic start:
sudo /usr/pgsql-10/bin/postgresql-10-setup initdb
sudo systemctl enable postgresql-10
sudo systemctl start postgresql-10

Once Opened Find the below lines at the bottom of the file and change peer to trust and idnet to md5
peer  change to trust
idnet change to md5
Start PostgreSQL Database server
sudo systemctl start postgresql-10
Enable it to start automatically at System Startup
sudo systemctl enable postgresql-10
Change the password for the default PostgreSQL user.
sudo passwd postgres
Switch to the postgres user.
su - postgres
Create a new user by typing:
createuser sonar
Switch to the PostgreSQL shell.
psql
Set a password for the newly created user for SonarQube database.
ALTER USER sonar WITH ENCRYPTED password 'sonar';
Create a new database for PostgreSQL database by running:
CREATE DATABASE sonarqube OWNER sonar;
Exit from the psql shell:
\q
Switch back to the sudo user by running the exit command.
exit

Now That DB Setup Is Completed, Let's Move On To SONARQUBE Installation & Configuration

Download stable SonarQube version from below website.
* Website:Â https://www.sonarqube.org/downloads/
* Note: This Article written for SonarQube version
Download & unzip SonarQube Latest Version
cd /opt
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.1.0.31237.zip
unzip sonarqube-8.1.0.31237.zip
mv /opt/sonarqube-8.1.0.31237 /opt/sonarqube
Create new user give ownership to /opt/sonarqube directory
 useradd sonar
 passwd sonar
 chown -R sonar:sonar /opt/sonarqube
SonarQube Server Instance Edit sonar properties file to uncomment and provide required information for below properties.
-FIle name:
vim /opt/sonarqube/conf/sonar.properties
  - sonar.jdbc.username=`sonar`
  - sonar.jdbc.password=`sonar`
  - sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube

setup firewall rules
firewall-cmd --permanent --zone=public --add-port=9000/tcp
firewall-cmd --reload
setenforce 0
Switch to sonar user and start SonarQube service : Edit the sonar script file and set RUN_AS_USER
sudo vim /opt/sonarqube/bin/linux-x86-64/sonar.sh
RUN_AS_USER=sonar
Execute sonar.sh as service account "sonar user"
su - sonar
cd /opt/sonarqube/bin/linux-x86-64/
./sonar.sh start

Configure Systemd service
Create a systemd service file for SonarQube to run as System Startup.
Add the below lines, vi /etc/systemd/system/sonarqube.service
/etc/systemd/system/sonar.service

[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=forking

ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop

User=sonar
Group=sonar
Restart=always

LimitNOFILE=131072
LimitNPROC=8192

[Install]
WantedBy=multi-user.target
Save and close the above file. Now stop the sonarqube script earlier we started to run using as daemon. Start the Sonarqube daemon by running:
# sudo systemctl start sonarqube.service
Enable the SonarQube service to automatically at boot time System Startup.
# sudo systemctl enable sonar
Check if the sonarqube service is running,
# sudo systemctl status sonar
SonarQube application uses port 9000. access SonarQube from browser
  http://<YourIP OR Hostname>:9000
username: admin
password: admin
Troubleshooting
1. Check whether you enabled port 9000 in instance security group
2. Check whether you enabled instance IP range in security group
Add the following For Troubleshooting
vim /etc/security/limits.conf
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
elasticsearch - nofile 131072
elasticsearch - nproc 8192
root soft memlock unlimited
root hard memlock unlimited
root - nofile 131072
root - nproc 8192
sonar - nofile 131072
sonar - nproc 8192

vim  /etc/sysctl.conf
fs.file-max = 2097152
vm.max_map_count = 524288
vm.swappiness = 1

