SONARQUBE

SonarQube Installation
SonarQube provides the capability to not only show health of an application but also to highlight issues newly introduced. With a Quality Gate in place, you can fix the leak and therefore improve code quality systematically.

Prerequisites
1. Java
2. Database ( MySQL is Deprecated so we are going to focus on PostgresSQL)
Increase the vm.max_map_count kernal ,file discriptor and ulimit for current session at runtime.
sudo sysctl -w vm.max_map_count=542288
sudo sysctl -w fs.file-max=131072
ulimit -n 131072
ulimit -u 8192
vim /etc/security/limits.conf  
# Add Below To The File
elasticsearch - nofile 131072
elasticsearch - nproc 65535
elasticsearch   soft    nofile          65536
elasticsearch   hard    nofile          65536
elasticsearch   memlock unlimited
root soft memlock unlimited
root hard memlock unlimited
root - nofile 131072
root - nproc 8192
sonarqube - nofile 131072
sonarqube - nproc 65535

vim /etc/sysctl.conf
fs.file-max = 2097152
vm.max_map_count = 524288
vm.swappiness = 1

Installation
Step 1: Install OpenJDK
sudo yum install java-11-openjdk-devel -y
sudo java -version

Step 2: Install PostgreSQL (https://www.postgresql.org/download/linux/redhat/)
# Install the repository RPM:
sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm

# Install PostgreSQL:
yum -y install postgresql13 postgresql13-server

# Optionally initialize the database and enable automatic start:
/usr/pgsql-13/bin/postgresql-13-setup initdb
systemctl start postgresql-13
systemctl enable postgresql-13

then go to 

sudo vi /var/lib/pgsql/13/data/pg_hba.conf

Once Opened Find the below lines at the bottom of the file and change peer to trust and idnet to md5
peer  change to trust
idnet change to md5
Start PostgreSQL Database server
sudo systemctl start postgresql-13
Enable it to start automatically at System Startup
sudo systemctl enable postgresql-13
Change the password for the default PostgreSQL user.
sudo passwd postgres
Switch to the postgres user.
su - postgres
Create a new user by typing:
createuser sonar
Switch to the PostgreSQL shell.
psql
Set a password for the newly created user for SonarQube database.
ALTER USER sonar WITH ENCRYPTED password 'Jesus$#@!';
Create a new database for PostgreSQL database by running:
CREATE DATABASE sonarqube OWNER sonar;
Exit from the psql shell:
\q
Switch back to the sudo user by running the exit command.
exit

Now That DB Setup Is Completed, Let's Move On To SONARQUBE Installation & Configuration

Download stable SonarQube version from below website.
* Website:Â https://www.sonarqube.org/downloads/
* Note: This Article written for SonarQube version
Download & unzip SonarQube Latest Version
cd /opt
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.1.0.31237.zip
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.65466.zip
unzip sonarqube-8.1.0.31237.zip
mv /opt/sonarqube-8.1.0.31237 /opt/sonarqube
Create new user give ownership to /opt/sonarqube directory
 useradd sonar
 passwd sonar
 chown -R sonar:sonar /opt/sonarqube
SonarQube Server Instance Edit sonar properties file to uncomment and provide required information for below properties.
-FIle name:
vim /opt/sonarqube/conf/sonar.properties
  - sonar.jdbc.username=`sonar`
  - sonar.jdbc.password=`sonar`
  - sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube

setup firewall rules
firewall-cmd --permanent --zone=public --add-port=9000/tcp
firewall-cmd --reload
setenforce 0
Switch to sonar user and start SonarQube service : Edit the sonar script file and set RUN_AS_USER
sudo vim /opt/sonarqube/bin/linux-x86-64/sonar.sh
RUN_AS_USER=sonar
Execute sonar.sh as service account "sonar user"
su - sonar
cd /opt/sonarqube/bin/linux-x86-64/
./sonar.sh start

Configure Systemd service
Create a systemd service file for SonarQube to run as System Startup.
Add the below lines, vi /etc/systemd/system/sonarqube.service
/etc/systemd/system/sonar.service

[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=forking

ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop

User=sonar
Group=sonar
Restart=always

LimitNOFILE=131072
LimitNPROC=8192

[Install]
WantedBy=multi-user.target
Save and close the above file. Now stop the sonarqube script earlier we started to run using as daemon. Start the Sonarqube daemon by running:
# sudo systemctl start sonarqube.service
Enable the SonarQube service to automatically at boot time System Startup.
# sudo systemctl enable sonar
Check if the sonarqube service is running,
# sudo systemctl status sonar
SonarQube application uses port 9000. access SonarQube from browser
  http://<YourIP OR Hostname>:9000 or http://192.168.0.59:9000/sonarqube/
username: admin
password: admin


Troubleshooting
1. Check whether you enabled port 9000 in instance security group
2. Check whether you enabled instance IP range in security group
Add the following For Troubleshooting
vim /etc/security/limits.conf
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
elasticsearch - nofile 131072
elasticsearch - nproc 8192
root soft memlock unlimited
root hard memlock unlimited
root - nofile 131072
root - nproc 8192
sonar - nofile 131072
sonar - nproc 8192

vim  /etc/sysctl.conf
fs.file-max = 2097152
vm.max_map_count = 524288
vm.swappiness = 1


****************************

Prep the Server With the Required Software
Step 1: Update the server.

sudo yum update -y
Step 2: Install wget & unzip

sudo yum install wget unzip -y
Step 3: Install java 11

sudo yum install java-11-openjdk-devel -y
Step 4: Login as root and execute the following commands.

sysctl vm.max_map_count
sysctl fs.file-max
ulimit -n
ulimit -u
Setup PostgreSQL 10 Database For SonarQube
Step 1: Install PostgreSQL 10 repo.

sudo yum install https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm -y
Step 2: Install PostgreSQL 10

sudo yum install postgresql10-server postgresql10-contrib -y
Step 3: Initialize the database.

sudo /usr/pgsql-10/bin/postgresql-10-setup initdb
Step 4: Open /var/lib/pgsql/data/pg_hba.conf file to change the authentication to md5.

sudo vi /var/lib/pgsql/10/data/pg_hba.conf
Find the following lines at the bottom of the file and change peer to trust and idnet to md5

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     peer
# IPv4 local connections:
host    all             all             127.0.0.1/32            ident
# IPv6 local connections:
host    all             all             ::1/128                 ident
Once changed, it should look like the following.

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     trust
# IPv4 local connections:
host    all             all             127.0.0.1/32            md5
# IPv6 local connections:
host    all             all             ::1/128                 md5
Step 5: Start and enable PostgreSQL.

sudo systemctl start postgresql-10
sudo systemctl enable postgresql-10
Step 6: You can verify the installation using the following version select query.

sudo -u postgres /usr/pgsql-10/bin/psql -c "SELECT version();"
Setup Sonar User and Database
We need to have a sonar user and database for the sonar application.

Step 1: Change the default password of the Postgres user. All Postgres commands have to be executed by this user.

sudo passwd postgres
Step 2: Login as postgres user with the new password.

su - postgres
Step 3: Log in to the PostgreSQL CLI.

psql
Step 4: Create a sonarqubedb database.

create database sonarqubedb;
Step 5: Create the sonarqube DB user with a strongly encrypted password. Replace your-strong-password with a strong password.

create user sonarqube with encrypted password 'your-strong-password';
Step 6: Next, grant all privileges to sonrqube user on sonarqubedb.

grant all privileges on database sonarqubedb to sonarqube
Step 7: Exit the psql prompt using the following command.

\q
Step 6: Switch to your sudo user using the exit command.

exit
Setup Sonarqube Web Server
Step 1: Download the latest Sonarqube installation file to /opt folder. You can get the latest download link from here.

cd /opt 
sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-7.6.zip
2. Unzip sonarqube source files and rename the folder.

sudo unzip sonarqube-7.6.zip
sudo mv sonarqube-7.6 sonarqube
4. Open /opt/sonarqube/conf/sonar.properties file.

sudo vi /opt/sonarqube/conf/sonar.properties
Uncomment and edit the parameters as shown below. Change the password accordingly. You will find the JDBC parameter under the PostgreSQL section.

sonar.jdbc.username=sonar                                                                                                                     
sonar.jdbc.password=sonar-db-password
sonar.jdbc.url=jdbc:postgresql://localhost/onarqubedb
By default, sonar will run on 9000. If you want on port 80 or any other port, change the following parameters for accessing the web console on that specific port.

sonar.web.host=0.0.0.0
sonar.web.port=80
If you want to access Sonarqube some path like http://url:/sonar, change the following parameter.

sonar.web.context=/sonar
Add Sonar User and Privileges
Create a user named sonar and make it the owner of the /opt/sonarqube directory.

sudo useradd sonar
sudo chown -R sonar:sonar /opt/sonarqube
Start Sonarqube Service
To start sonar service, you need to use the script in sonarqube bin directory.

Step 1: Login as sonar user

sudo su - sonar
Step 2: Navigate to the start script directory.

cd /opt/sonarqube/bin/linux-x86-64 
Step 3: Start the sonarqube service.

./sonar.sh start
Now, you should be able to access sonarqube on the browser on port 9000

Step 4: Check the application status. If it is in a running state, you can access the sonarqube dashboard using the DNS name or Ip address of your server.

sudo ./sonar.sh status
Setting up Sonarqube as a service
Step 1: Create a file /etc/systemd/system/sonarqube.service

sudo vi /etc/systemd/system/sonarqube.service
Step 2: Copy the following content onto the file.

[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=simple
User=sonarqube
Group=sonarqube
PermissionsStartOnly=true
ExecStart=/bin/nohup java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /opt/sonarqube/lib/sonar-application-7.6.jar
StandardOutput=syslog
LimitNOFILE=65536
LimitNPROC=8192
TimeoutStartSec=5
Restart=always

[Install]
WantedBy=multi-user.target
Step 3: Start and enable sonarqube

sudo systemctl start sonarqube
sudo systemctl enable sonarqube
Step 4: Check the sonarqube status to ensure it is running as expected.

sudo systemctl status  sonarqube
Troubleshooting Sonarqube
All the logs of sonarqube are present in the /opt/sonarqube/logs directory.

cd /opt/sonarqube/logs
You can find the following log files.

es.log
sonar.log
web.log
access.log
Using the tail command you can check the latest logs. For example,

tail -f access.log


